
const canvas  =document.getElementByID("myCanvas");
const ctx = canvas.getContext("2d");
	ctx.fillRect(100,12,20,20);
function rectInRandomPosition()
{
	var randX,randy;
	randX = Math.random()*500;
	
	randY = Math.random()*500;
	
	ctx.fillRect(randX,randY,20,20);
	
	
}


function slist (target) {

  target.classList.add("slist");
  let items = target.getElementsByTagName("li"), current = null;


  for (let i of items) {
    i.draggable = true;
    

    i.ondragstart = (ev) => {
      current = i;
      for (let it of items) {
        if (it != current) { it.classList.add("hint"); }
      }
    };
    
  
    i.ondragenter = (ev) => {
      if (i != current) { i.classList.add("active"); }
    };

  
    i.ondragleave = () => {
      i.classList.remove("active");
    };

  
    i.ondragend = () => { for (let it of items) {
        it.classList.remove("hint");
        it.classList.remove("active");
    }};
 
 
    i.ondragover = (evt) => { evt.preventDefault(); };
 

    i.ondrop = (evt) => {
      evt.preventDefault();
      if (i != current) {
        let currentpos = 0, droppedpos = 0;
        for (let it=0; it<items.length; it++) {
          if (current == items[it]) { currentpos = it; }
          if (i == items[it]) { droppedpos = it; }
        }
        if (currentpos < droppedpos) {
          i.parentNode.insertBefore(current, i.nextSibling);
        } else {
          i.parentNode.insertBefore(current, i);
        }
      }
    };
  }
}